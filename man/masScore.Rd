% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/microanalyticScore.R
\name{masScore}
\alias{masScore}
\title{Predict MASmodule}
\usage{
masScore(
  session,
  module,
  data,
  exact = TRUE,
  ScoreType = "score",
  forceTrail = TRUE,
  ...
)
}
\arguments{
\item{session}{viya_connection object, obtained through \code{session} function}

\item{module}{\code{MASmodule} object, module name. If name, will try to find a single module with exact name match. See \code{exact} parameter}

\item{data}{\code{data.frame} data.frame of the data}

\item{exact}{the filter query should use "contains" for partial match or "eq" for exact match}

\item{ScoreType}{\code{execute} for decision, \code{score} for model}

\item{forceTrail}{boolean, if the mas model is a decision (\code{execute}), it will force add a trailing underscore (_) in variable names.}

\item{...}{additional parameters to be passed to \code{httr::GET} such as \code{httr::add_headers}}
}
\value{
\code{data.frame} with scored rows
}
\description{
score a data.frame MASmodule/model
}
\examples{

\dontrun{
# single row
scored <- masScore(sess, "module_name", data[1,])
scored

# The masScore is implemented with `furrr` for maximum performance
# if you want to parallelize use the following code. 
# Not recommended when scoring single row because overhead will drop the performance

future::plan(future::multisession, workers = future::availableCores() -1)
scored <- masScore(sess, "module_name", data)

# if you want to go back to single threaded scoring use
future::plan(future::sequential)
}

}
