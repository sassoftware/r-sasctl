% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model_management.R
\name{publish_model}
\alias{publish_model}
\title{Publish Model}
\usage{
publish_model(
  session,
  model,
  name,
  destination = "maslocal",
  exact = TRUE,
  force = FALSE,
  publishInfo = FALSE,
  ...
)
}
\arguments{
\item{session}{viya_connection object, obtained through \code{session} function}

\item{model}{\code{MMmodel} object, project ID or model name. If name, will try to find a single model with exact name match. See \code{exact} parameter}

\item{name}{publish endpoint, if missing, the model name will be used}

\item{destination}{the publish destination}

\item{exact}{the filter query should use "contains" for partial match or "eq" for exact match}

\item{force}{force replace of a published model with the same name}

\item{publishInfo}{boolean, returns the \code{publishInfo} object instead of \code{MASmodule} object}

\item{...}{additional parameters to be passed to \code{httr::POST} such as \code{httr::add_headers}}
}
\value{
A \code{MASmodule} object from \code{get_masmodule()}. If \code{return_publish_info = TRUE} or \code{destination != maslocal}, returns a \code{publishInfo} object
}
\description{
Publish a model from Model Manager to a given destination
}
\examples{

\dontrun{
mas_module <- publish_model(sess, mod, "maslocal", "R_model_published")

scored <- masScore(sess, mas_module, hmeq[1,-1])
}

}
